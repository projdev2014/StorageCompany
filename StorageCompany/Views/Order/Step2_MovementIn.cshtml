@model StorageCompany.Models.StoredProcedure.ListItemIn

@{
    ViewBag.Title = "Step2_Movement";
    var dbo = new StorageCompany.DataAccessLayer.DataAccessObject();
    Order order = (Order)Session["order"];
    List<Storage> freeStorage = dbo.getListEmptyStorage(order.dateEstimated);
    StorageCompany.Models.StoredProcedure.ListItemIn test = new StorageCompany.Models.StoredProcedure.ListItemIn();

}


<div class=" crumbs">
    <a href="#" class="active"><i class="glyphicon glyphicon glyphicon-record"></i> Step 1 : Order</a>
    <a href="#" class="active"><i class="glyphicon glyphicon glyphicon-record"></i> Step 2 : Item</a>
    <a href="#"><i class="glyphicon glyphicon glyphicon-record"></i> Step 3 : Confirm</a>
</div>

<h2>Encodage des Articles</h2>
<h3>Mouvement Entrant</h3>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <fieldset>
        <div class="form-horizontal">

            <div class="form-group">
                @Html.LabelFor(model => model.storageId, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("storageId")
                    @Html.ValidationMessageFor(model => model.storageId)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.productId, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("productId")
                    @Html.ValidationMessageFor(model => model.productId)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.timeExpire, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.timeExpire)
                    @Html.ValidationMessageFor(model => model.timeExpire)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>

        </div>
    </fieldset>
    @*<hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.statusId, "statusId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("statusId", String.Empty)
                @Html.ValidationMessageFor(model => model.statusId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.orderId, "orderId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("orderId", String.Empty)
                @Html.ValidationMessageFor(model => model.orderId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.itemId, "itemId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("itemId", String.Empty)
                @Html.ValidationMessageFor(model => model.itemId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.storageId, "storageId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("storageId", String.Empty)
                @Html.ValidationMessageFor(model => model.storageId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dateDone, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dateDone)
                @Html.ValidationMessageFor(model => model.dateDone)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Next Step" class="btn btn-default" />
            </div>
        </div>*@

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
