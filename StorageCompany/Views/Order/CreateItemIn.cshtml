@model StorageCompany.Models.StoredProcedure.ItemIn

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Add Item</legend>
        <div class="form-group">
            @Html.LabelFor(model => model.productId, "productId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("productId")
                @Html.ValidationMessageFor(model => model.productId)
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.storageId, "storageId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("storageId")
                @Html.ValidationMessageFor(model => model.storageId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.timeExpire, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.timeExpire)
                @Html.ValidationMessageFor(model => model.timeExpire)
            </div>
        </div>

        <span>
            <input type="submit" value="Create" class="btn btn-default" />&nbsp;&nbsp;
            <input type="button" value="Cancel" id="btncancel" class="btn btn-default"  />
        </span>
    </fieldset>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}